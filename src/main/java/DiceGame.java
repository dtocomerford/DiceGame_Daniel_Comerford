
import java.util.Random;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Dan
 */




public class DiceGame extends javax.swing.JFrame {

    /**
     * Creates new form DiceGame
     */
    
    //An object of the random class to use for the dice rolls
    Random random = new Random();
    
    //Game variables
    public int round = 1;
    public int Player1Points;
    public int Player2Points;
    public int Player1Roll = 0;
    public int Player2Roll = 0;
    public int sumOfDice;
    public int playersGo = 1;
    
    public int challengeNumber;
    
    //Boolean to indicate if player 2 will challenge the sum of the previous rolls
    public boolean challengeRoll = false;
    
    public DiceGame() {
        initComponents();
        TurnLabel.setText("Player 1's turn");
        RoundCounter.setText("Round: "+ round);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        RoundCounter = new javax.swing.JLabel();
        RollButton = new javax.swing.JButton();
        Outcome1 = new javax.swing.JLabel();
        Outcome2 = new javax.swing.JLabel();
        TurnLabel = new javax.swing.JLabel();
        P1Points = new javax.swing.JLabel();
        P2Points = new javax.swing.JLabel();
        RoundWinner = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        RoundCounter.setText("Round:");

        RollButton.setText("ROLL");
        RollButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RollButtonActionPerformed(evt);
            }
        });

        Outcome1.setText("Outcome:");

        Outcome2.setText("Outcome:");

        TurnLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        TurnLabel.setText("Turn:");

        P1Points.setText("Player1 points:");

        P2Points.setText("Player2 points:");

        RoundWinner.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(RoundCounter)
                                .addGap(43, 43, 43)
                                .addComponent(Outcome1))
                            .addComponent(P1Points)))
                    .addComponent(RollButton, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(TurnLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Outcome2)
                            .addComponent(P2Points))
                        .addContainerGap(145, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(RoundWinner)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RoundCounter)
                    .addComponent(Outcome1)
                    .addComponent(Outcome2))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(P1Points)
                    .addComponent(P2Points))
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RollButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TurnLabel))
                .addGap(36, 36, 36)
                .addComponent(RoundWinner)
                .addContainerGap(78, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RollButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RollButtonActionPerformed
        //Round number label is updated each time the 'roll' button is pressed
        RoundCounter.setText("Round: "+ round);
        RoundWinner.setText("");
        
        
        if(challengeRoll == false)
        {
            //An if statement which alternates the players go's
            if(playersGo == 1)
            {
                //Using the random class to get a number from 1  to 6 and then assigning that number to the Plater1Roll variable
                Player1Roll = 1+random.nextInt(6);
                Player1Roll += 1+random.nextInt(6);
                //Setting the outcome label to the result of the players dice roll
                Outcome1.setText("Player 1 result: " +Integer.toString(Player1Roll));
                //Setting the playerGo variable to the next player
                playersGo = 2;
                //Changing the label which says whos go it is
                TurnLabel.setText("Player 2's turn");
            }
            else if(playersGo == 2)
            {
                //Using the random class to get a number from 1  to 6 and then assigning that number to the Plater2Roll variable
                Player2Roll = 1+random.nextInt(6);
                Player2Roll += 1+random.nextInt(6);
                
                //Setting the outcome label to the result of the players dice roll
                Outcome2.setText("Player 2 result: " +Integer.toString(Player2Roll));
                
                //Setting the playerGo variable to the next player
                playersGo = 1;
                
                //Changing the label which says whos go it is
                TurnLabel.setText("Player 1's turn");
            }
            //Calling the check winner function
            checkWinner();
            
            
        }
        else
        {
            //Else player 2 gets to challenge the sum of the previous rolls and therefore gets another turn
            
            //Set Player2Roll to a number from 1 to 6
            Player2Roll = 1+random.nextInt(6);
            Player2Roll += 1+random.nextInt(6);
            //Set player 2's outcome label to the result of the roll
            Outcome2.setText("Player 2 result: " +Integer.toString(Player2Roll));
            
            //Call the check winner function
            checkWinner();
        }      
        
    }//GEN-LAST:event_RollButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DiceGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DiceGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DiceGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DiceGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DiceGame().setVisible(true);
            }
        });
    }
    
    //A function to... you guessed it check the winner
    public void checkWinner()
    {
        
        
        //An if statement for whether player 2 is challenging the previous rolls or not 
        if(challengeRoll == false)
        {
            
            //If the sum of the dice is equal to 7 or 11 player 1 gets the point
            if(Player1Roll == 7 || Player1Roll == 11)
            {
                //Increase player 1's points
                Player1Points++;
                
                //Update the label for player 1's points
                P1Points.setText("Player 1 points: " + Player1Points);
                
                //The round is over so increase the round number variable
                round++;
                
                //Upsate the label to say who won the round
                RoundWinner.setText("Round: " + round + " Player 1 wins");
                
                //Call the reset label function
                Reset();
            }
            else if(Player1Roll == 2 || Player1Roll == 3 || Player1Roll == 12 )
            {
                //If the sum of the dice equals 2 or 3 or 12 the its a draw, both players get a point
                
                //Increase both players points
                Player1Points++;
                Player2Points++;
                
                //The round is over so increase the round number variable
                round++;
                
                //Update the label for both players points
                P1Points.setText("Player 1 points: " + Player1Points);
                P2Points.setText("Player 2 points: " + Player2Points);
                
                //Upsate the label to say it was a draw
                RoundWinner.setText("Round: " + round + " Draw");
                
                //Resets players go to player 1
                playersGo = 1;
                
                //Call the reset function
                Reset();
            }
            else if(Player1Roll == 4 || Player1Roll == 5 || Player1Roll == 6 || Player1Roll == 8 || Player1Roll == 9 || Player1Roll == 10  )
            {
                //If sum of dice is equal to 4, 5, 6, 8, 9, 10 then player 2 gets to challenge and roll again
                
                //Changing the label which says whos go it is
                TurnLabel.setText("Player 2's challenge");
                
                //Setting the variable for the next players go
                playersGo = 2;
                
                //Set the boolean for a challenge roll
                challengeRoll = true;
                
                //Setting the variable to the score player 2 has to beat
                challengeNumber = Player1Roll;
            }
        }
        else
        {
            if(Player2Roll > challengeNumber)
            {
                //Increase player 2's points
                Player2Points++;
                
                //Reset challenge number variable
                challengeNumber = 0;
                
                //Reset challenge roll boolean
                challengeRoll = false;
                
                //Set round winner text 
                RoundWinner.setText("Round: " + round + " Player 2 wins");
                
                //Update player 2's points label
                P2Points.setText("Player 2 points: " + Player2Points);
                
                //Increase round number
                round++;
                
                //Call reset function
                Reset();
                playersGo = 1;
                TurnLabel.setText("Player 1's turn");
            }
            else
            {
                //Increase player 1's points
                Player1Points++;
                
                //Reset challenge number variable
                challengeNumber = 0;
                
                //Reset challenge roll boolean
                challengeRoll = false;
                
                //Set round winner text 
                RoundWinner.setText("Round: " + round + " Player 1 wins");
                
                //Update player 2's points label
                P1Points.setText("Player 1 points: " + Player1Points);
                
                //Increase round number
                round++;
                
                //Call the reset function
                Reset();
                
                //Set players go to player 1
                playersGo = 1;
                
                //Update label to say player 1's go
                TurnLabel.setText("Player 1's turn");
            }
        }   
    }
    
    public void Reset()
    {
        //Outcome1.setText("Outcome:");
        //Outcome2.setText("Outcome:");
        
        //Reset the variables which store the players roll outcomes
        Player1Roll = 0;
        Player2Roll = 0;
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Outcome1;
    private javax.swing.JLabel Outcome2;
    private javax.swing.JLabel P1Points;
    private javax.swing.JLabel P2Points;
    private javax.swing.JButton RollButton;
    private javax.swing.JLabel RoundCounter;
    private javax.swing.JLabel RoundWinner;
    private javax.swing.JLabel TurnLabel;
    // End of variables declaration//GEN-END:variables
}
